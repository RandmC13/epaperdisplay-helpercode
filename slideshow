#!/usr/bin/env python3
import os, sys, random
import json
from PIL import Image, ImageOps

sys.path.insert(1,os.path.join(os.path.dirname(os.path.realpath(__file__)), 'lib/'))

import epd7in5_V2

epd = epd7in5_V2.EPD()

width = epd7in5_V2.EPD_WIDTH
height = epd7in5_V2.EPD_HEIGHT

gallerypath = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'gallery/')

with open(gallerypath + "config.json", "r") as f:
	jsondata = f.read()

data = json.loads(jsondata)

pictures = data["array"]
index = data["index"]

if index < len(pictures):

	try:

		path = gallerypath + pictures[index]

		#Open grab.jpg in PIL
		#print("Loading Image")
		image = Image.open(path)

		#Resize image to correct size
		image = ImageOps.fit(image, (width, height), Image.ANTIALIAS)

		#Dither the image into a 1 bit bitmap (just zeros and ones)
		image = image.convert(mode='1', dither=Image.FLOYDSTEINBERG)

		#Display the image
		#print("Waking Up...")
		epd.init()
		print('Displaying image {}'.format(pictures[index]))
		epd.display(epd.getbuffer(image))

		#print("Going to sleep...")
		epd.sleep()
		epd.Dev_exit()

		index += 1

	except Exception as e:
		print(e)

else:
	#print("Index overflow, beginning at first image")
	index = 0
	random.shuffle(pictures)

data["index"] = index
data["array"] = pictures

with open(gallerypath + "config.json", "w") as f:
        f.write(json.dumps(data))

